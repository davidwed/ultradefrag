The following is Justin Dearing's TODO list for the manual and other technical 
documents included with UltraDefrag.
Items to describe:

/* maybe we need to use this file as stack  -- Dmitri */
/* Agreed -- Justin */

1. In version 1.2.4 and later versions cluster map for very small volumes
   can be very inaccurate. P.a., one strange disk contains just 500 clusters.
   But internally they are represented (in 1.2.4 version of program) 
   by 728 blocks. Therefore we have one block (728 / 500) per cluster 
   plus 229 blocks per the last one. 
   So, the bottom part of the cluster map is invalid.
   If you have no less than 728 clusters, don't worry about the cluster map.
   This restriction is a small cost for the big modern volumes support.
   Maybe it will be fixed in next versions, but currently 
   I don't know how to do it.

2. Project targets are:
   - for end users: simplicity, high speed processing, nice gui
   - for developers: windows hacking

3. Udefrag.dll and zenwinx.dll are components critical for
    windows boot process. If one of them is missing and boot time defrag is
    enabled, you will see BSOD at boot time, and Last Known Good configuration 
    will be not helpful. Currently I don't know how make our software absolutely
    safe.

4. Rxvt (from MSYS; tested version is 2.7.2) terminates udefrag.exe when 
    you press Ctrl + C without special message sending (for CtrlHandlerRoutine).
    Therefore, unload function will never executed, 
    and driver will not be unloaded.
    This is a bug of rxvt.

5. If you terminate dfrg.exe or udefrag.exe (using task manager or rxvt) then 
    you will have small memory leak (16 bytes) from the nonpaged pool.
    Reboot is required to free this memory.

6. The new installer will set silently AutoReboot parameter to zero, because
    the numbers from BSOD usually are needed to fix a problem. Maybe some users
    don't need to have this ability?

7. We have few bug reports about driver loading failure. I'm sure that users
    don't understand something. They must have admin rights during installation
    and program execution (as described in our docs), must have all restrictions
    related with device drivers disabled (driver signing and other related 
    policies). If user is an administrator (has SE_LOAD_DRIVER privilege)
    and ultradfg driver is registered (in HKLM\System\CurrentControlSet\Services\ultradfg)
    but he can't load the driver then his windows installation is wrong.
    I can't imagine anything else.
