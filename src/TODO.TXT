;===============================================================================
;
; This file will contain developer's diary, in other words, plans for future,
; current development status and so on.
;
;===============================================================================

;-------------------------------------------------------------------------------
; 
; 6 February 2010
;
;-------------------------------------------------------------------------------

The new 4.0.0 release is dramatically more reliable:

* A lot of extremely important bugs were fixed.
* The strongest error handling was added to all program modules.
* Kernel mode driver was removed as a component less reliable by definition.
* Documentation was rewritten completely to be much clearer.
* Website was cleaned up to get better navigation and faster access to all important information.

The next target - minor 4.0.1 upgrade with better reliablity and updated
translations.

;-------------------------------------------------------------------------------
; 
; 14 January 2010
;
;-------------------------------------------------------------------------------

http://en.wikipedia.org/wiki/Software_quality

A lot of unneccessary stuff was removed from the program.
The handbook was rewritten completely to be much clearer.
The next desired point - a perfect error handling.

;-------------------------------------------------------------------------------
; 
; 15 December 2009
;
;-------------------------------------------------------------------------------

Great news! I have found the x64 compilation problem's cause. It was not 
compiler's bug, but my own mistake. NtCreateEvent function prototype was 
wrong. I've fixed it and now compiled code is right.

The next 3.3.1 release will be the first which have all modules compiled 
properly.

;-------------------------------------------------------------------------------
; 
; 7 December 2009
;
;-------------------------------------------------------------------------------


I. Few thoughts about autodefrag feature.

Is autodefrag feature really useful or not? I mean a special mode when program 
is running all the time performing defragmentation during the system idle. In 
my opinion this is not a great idea because such programs have a tendency to 
heavily load the system in the most unexpected moments. Therefore we have no 
motivation to implement the discussed feature. Why make the program less 
attractive?

If anyone really needs something likewise he could use system scheduler with 
command line defragmenter or something like that to run defragmentation job 
periodically.

2. Why not implement complex disk optimization strategies like in JkDefrag?

Of course, this is not difficult to add more optimization strategies to the 
program, but they have one important disadvantage - any complex method takes a 
lot of time. On the other hand, UltraDefrag was designed especially to be as 
fast as possible to reduce time period required for disk defragmentation. 
Therefore it uses only the simplest algorithms. Therefore complicated methods 
of disk optimization will break the spirit of the program. Therefore they will 
be never implemented.

;-------------------------------------------------------------------------------
; 
; 1 December 2009 - the following notes were found somewhere, they were written
; approx. two years ago and I forgot about them
;
;-------------------------------------------------------------------------------

Part I:

- In version 1.2.4 and later versions cluster map for very small volumes
   can be very inaccurate. P.a., one strange disk contains just 500 clusters.
   But internally they are represented (in 1.2.4 version of program) 
   by 728 blocks. Therefore we have one block (728 / 500) per cluster 
   plus 229 blocks for the last one. 
   So, the bottom part of the cluster map is invalid.

- Project targets are:
   - for end users: simplicity, high speed processing, nice gui
   - for developers: windows hacking

- Rxvt (from MSYS; tested version is 2.7.2) terminates udefrag.exe when 
    you press Ctrl + C without special message sending (for CtrlHandlerRoutine).
    Therefore, unload function will never be executed, 
    and driver will not be unloaded.
    This is a bug of rxvt.

- If you terminate dfrg.exe or udefrag.exe (using task manager or rxvt) then 
    you will have small memory leak (16 bytes) from the nonpaged pool.
    Reboot is required to free this memory.

Part II:

User's wishes for the next releases:

- website translated into several foreign languages
- screensaver
- defragment volumes that doesn't have any letter assigned
- partially defragmentation of highly fragmented files
- process hard ntfs links correctly

;-------------------------------------------------------------------------------
; 
; one month later: 21 November 2009
;
;-------------------------------------------------------------------------------

They were tested Windows DDK with all available optimization keys (including /Od), 
latest Windows SDK, Pelles C compiler and MinGW x64. Unfortunately each of them 
produces wrong x64 code. Therefore we cannot provide 64-bit native binaries 
at this moment.

Since the 3.3.0 release we'll provide two different forms of binaries:
 - full featured 32-bit packages (with kernel mode driver and boot time interface)
 - portable packages

Portable packages will be native 32-bit, therefore kernel mode driver and boot 
time interface will not be available on 64-bit systems. On the other hand, 
all remaining features of the program will be well supported. In addition, 
portable packages will not require installation, which is another advantage over 
an old portable packages.

After resolving x64 compilation problems the following tests must be performed:
 - boot time interface: USB and PS/2 keyboards at startup and in interactive mode
 - gui accelerators

;-------------------------------------------------------------------------------
;
; one additional note (11 October 2009):
;
;-------------------------------------------------------------------------------

x64 compiler included in Windows Server 2003 DDK sometimes produces 
wrong code. We need to find better replacement for it.

;-------------------------------------------------------------------------------
;
; Updated plans for future (8 October 2009):
;
;-------------------------------------------------------------------------------

DOS version development is a little bit difficult due to the missing universal 
sectors reading function in this operating system. Therefore we will develop it 
under an experimental basis when we will have free time enough for that. I'm 
not sure that it will be particularly useful.

Instead of working on separate DOS version of the program I plan to complete 
the final 3.2.x Windows version. This point will be achieved for educational 
purposes: the final version of the driver will be helpful for all the people 
who are interested in Windows Kernel architecture.

After achieving this final point I'll work on a driver replacement. All kernel 
mode code will be ported to a single native DLL. This gives us the following 
advantages: better support for modern versions of Windows regards to solving 
a driver signing problem, better reliability and more simplified code.

First of all I will port all defragmenter's code to a single udefrag-kernel.dll.
Later I'll perform full set of tests to compare it with driver.

;-------------------------------------------------------------------------------
;
; Plans for future (7 October 2009):
;
;-------------------------------------------------------------------------------

1. Add UD_FRAGMENTS_THRESHOLD filter parameter.
2. Improve filters by excluding more files.
3. Add full support for USB keyboards and PS/2 keyboards on x64 systems.

After these 3 steps program goes into maintenance mode. New releases will 
contain new language packs, bugfixes (when some bugs will be reported) and 
improvements (when something interesting will be suggested). Also we will 
continue to provide technical support to program users.

All the features non listed above but suggested by users are in our opinion 
optional features. Their implementation seems to be too difficult though 
the result seems to be not so great. Maybe we will implement some things 
in future, but this is not a main goal for next days.

We have one better thing to do in future: UltraDefrag for DOS seems to be 
a really cool software, useful for these gamers who prefers old good games 
written especially for DOS.

To get more information about UltraDefrag for DOS check out the /src/DOS 
subdirectory contents of our SVN repository.

Thanks for comprehension.
